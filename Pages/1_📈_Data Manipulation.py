import streamlit as st; import math

# ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤
st.set_page_config(
    page_title="Data Manipulation", page_icon="üìà",)
## ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
def DM_show():
    # ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
    head = """ <h1 style='text-align: center'> Data Manipulation </h1> """
    st.markdown(head, unsafe_allow_html=True)
    st.write("# ") 

    st.write( """
             **Description:**
        This page is created for data preparation with pandas library. It involves cleaning the original 
                data to make it ready for further analysis. The processes that can be performed include data 
                filtering (filtering as nume- ric data), dropping columns with more than 50% missing data and filling 
                missing values in some columns with the mean value. 

                Note: These mentioned processes are only applicable to quantitative data.
        """ )
DM_show()

# ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå
## ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏î‡∏£‡∏≠‡∏õ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏´‡∏ô‡∏ö‡πâ‡∏≤‡∏á
def col_drop(dropped_columns):
    for col in dropped_columns:
        st.write(f' " {col} "  column has been dropped')

## ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ df ‡∏°‡∏±‡∏ô‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô session_state ‡πÑ‡∏´‡∏°‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ‡∏à‡∏∞‡πÑ‡∏•‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏≠‡∏±‡∏û‡πÑ‡∏ü‡∏•‡πå ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏Å‡πá‡∏Ç‡πâ‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÄ‡∏•‡∏¢
if 'df_final' in st.session_state:
    df_final = st.session_state.df_final

    st.write("Your data from previous page is:")
    cb_data = st.checkbox("Show your data",key='cb_data')
    if cb_data:
        st.write(df_final)
        if st.button("Reset Result, just click this buttonüëà"):
            del st.session_state['df_final']
            st.write("Your data has been clear!")

elif 'df' in st.session_state:
    df = st.session_state.df
    df_final = df

    ### ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤
    missing_variables = df.isna().sum()[lambda x: x > 0]
    ### ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÑ‡∏´‡∏° 
    if not missing_variables.empty:
        st.write("Oops! Look like something are missing. üëª")

    ### ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏£‡∏Å ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏î‡∏ö‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ missing
    cb_1 = st.checkbox("Show Missing Valuable")
    if cb_1:
        st.write(missing_variables)

    ### ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    st.write("### Data Preparation")
    #### ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÇ‡∏ä‡∏ß‡πå‡πÅ‡∏Ñ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    cb_2 = st.checkbox("Show numeric Data only")
    if cb_2:
        df_scale = df.select_dtypes(include=['number'])
        dropped_columns_1 = set(df_final.columns) - set(df_scale) #### ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏õ‡πÑ‡∏õ
        col_drop(dropped_columns_1)
        df_final = df_scale

    #### ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏≤‡∏° ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏î‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• < thresh
    cb_3 = st.checkbox("Drop Valuable that's missing > 50%")
    if cb_3:
        df_fill_1 = df_final.copy() # ‡∏Å‡πä‡∏≠‡∏õ‡∏õ‡∏µ‡πâ‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
        df_drop = df_fill_1.dropna(thresh=round(len(df)/2), axis=1) # ‡πÄ‡∏≠‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡∏´‡∏≤‡∏£ 2 ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏±‡∏î‡∏Ç‡∏∂‡πâ‡∏ô
        dropped_columns_2 = set(df_fill_1.columns) - set(df_drop.columns)  #### ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏£‡∏≤‡∏ö‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡∏î‡∏£‡∏≠‡∏õ‡πÑ‡∏õ
        col_drop(dropped_columns_2)
        df_final = df_drop

    #### ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏µ‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏≤‡∏¢‡∏à‡∏∞‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
    cb_4 = st.checkbox("Fill Missing Values with Mean (Numeric columns only)")
    if cb_4:
        number_cols = df.select_dtypes(include=['int','float']).columns # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        df_fill = df_final.copy() # ‡∏Å‡πä‡∏≠‡∏õ‡∏õ‡∏µ‡πâ‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤
        for col in number_cols: # ‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏•‡∏π‡∏õ‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö
            if df[col].isnull().any(): # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏´‡∏≤‡∏¢‡πÑ‡∏õ
                df_fill[col] = df[col].fillna(math.ceil(df[col].mean())) # ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ô‡∏±‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢
        df_final = df_fill

    st.write("Final Data")
    st.write(df_final)
    if st.button("Save Result, just click this buttonüëà"):
        st.session_state['df_final'] = df_final
        st.write("Your data has been save!")
## ‡∏™‡∏∑‡∏ö‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡πá‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏≠‡∏±‡∏û‡∏ã‡∏∞
else:
    st.write("Oops! Look like you forgot to upload your file")
    st.write('<a href="/" target="_self">Return to Homepage</a>', unsafe_allow_html=True)

    

