import streamlit as st; import pandas as pd
import Pages.data_manipulation as data_manipulation
import Pages.data_simulating as data_simulating
import Pages.multivariate_visualization as multivariate_visualization
import Pages.hypothesis_testing as hypothesis_testing
import Pages.manova as manova
st.set_page_config(page_title="Homepage",page_icon="üèöÔ∏è",)

st.sidebar.title("Navigation")
page = st.sidebar.selectbox("Select a page:", [
    "Homepage", 
    "Data Manipulation", 
    "Data Simulating", 
    "Multivariate Visualization", 
    "Hypothesis Testing", 
    "MANOVA"
])

def show():
    # ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤
    ## ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
    def Homepage_show():
        head = """ <h1 style='text-align: center'> Welcome to Multivariate Analysis web application! üëã </h1> """
        st.markdown(head, unsafe_allow_html=True)
        st.write("# ") 
    
        ### ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ
        st.markdown(""" **Description:** This web application has been developed as part of the Multivariate Analysis course.
            It aims to provide a comprehensive platform for visualizing, analyzing and hypothesis testing for multivariate data.
            **Before next step, please upload your file. Drop it below üëá** """ )
    Homepage_show()
    
    # ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    st.markdown('## Sample of data for upload.')
    st.write("This data is from Swiss dataset, please upload your data in a format that's similar to this sample data. ")
    swiss = pd.read_csv('https://vincentarelbundock.github.io/Rdatasets/csv/datasets/swiss.csv')
    st.write(swiss)
    st.write( """ Note: Or you want use this dataset, just click here üëá. """ )
    if st.button("Save Swiss dataset for next pages",key='Save_button1'):
            swiss = swiss.select_dtypes(include=['number'])
            st.session_state.swiss = swiss 
    st.markdown('---')  
    
    # ‡∏™‡πà‡∏ß‡∏ô‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå
    ## ‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå
    st.markdown('## Upload file type .xlsx or .csv')
    uploaded_file = st.file_uploader("Choose your .xlsx or .csv file", type=['xlsx','csv']) # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏•‡πá‡∏≠‡∏Ñ‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .xlsx ‡πÅ‡∏•‡∏∞ .csv
    
    ## ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ô‡∏µ‡πâ
    if uploaded_file:
        ### ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session_state
        st.session_state.uploaded_file = uploaded_file 
        ### ‡∏≠‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏´‡∏ô
        if uploaded_file.name.endswith('.xlsx'):
            df = pd.read_excel(uploaded_file)
        ### .name ‡∏Ñ‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå .endswith ‡∏Ñ‡∏∑‡∏≠ ‡πÄ‡∏≠‡∏≤‡∏Ñ‡∏≥‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢ ‡∏ô‡∏±‡πà‡∏ô‡∏Ñ‡∏∑‡∏≠ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô
        elif uploaded_file.name.endswith('.csv'):
            df = pd.read_csv(uploaded_file)
        ### ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .xlsx ‡∏´‡∏£‡∏∑‡∏≠ .csv file ‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        else:
            st.write("Please Upload file type .xlsx or .csv!")
        st.session_state.df = df      
    
        # ‡∏´‡∏≤‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°
        grouping_column = None
        for col in df.columns:
            unique_vals = df[col].nunique()
            if 1 < unique_vals < len(df) // 2:  # ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°
                grouping_column = col
                break  
    
         # ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if grouping_column:
            st.write(f"Grouping column `{grouping_column}` automatically detected. Reshaping data...")
    
            # ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            reshaped_df = pd.concat([df[df[grouping_column] == i].reset_index(drop=True).drop(columns=[grouping_column]) 
                 for i in sorted(df[grouping_column].unique())],axis=1)
    
            # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡∏ô‡∏≤‡∏°‡∏¥‡∏Å
            reshaped_df.columns = [f"{col}_{i}" for i in sorted(df[grouping_column].unique()) for col in df.columns if col != grouping_column]
            st.session_state.df = reshaped_df 
    
        
    # ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå  
    ## ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ß‡πà‡∏≤ df ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô session_state ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ None
      ### ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ß‡πà‡∏≤ ‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï session state ‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏∏‡∏Å‡πÄ‡∏û‡∏à‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏±‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ô  
    df = st.session_state.get('df')
    if df is None:
        st.write("Please upload a file to proceed.")
        st.markdown(""" Or you can go to 2_üíª_Data Simulating if you don't have any data. """ )
    else:
        if st.button("Show Your data that's you upload, just click this buttonüëà"):
            st.write("Your Data from upload")
            st.write(df)
            ## ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡πà‡∏≤
            missing_variables = df.isna().sum()[lambda x: x > 0]
            ## ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏¢‡πÑ‡∏õ‡πÑ‡∏´‡∏° 
            if not missing_variables.empty:
                st.write("Oops! Look like something are missing. üëª") 

if page == "Homepage":
    show()
elif page == "Data Manipulation":
    data_manipulation.show()  
elif page == "Data Simulating":
    data_simulating.show()  
elif page == "Multivariate Visualization":
    multivariate_visualization.show()
elif page == "Hypothesis Testing":
    hypothesis_testing.show()
elif page == "MANOVA":
    manova.show()
